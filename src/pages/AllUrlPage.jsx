import React, { useState, useEffect } from 'react';
import { getUserUrls } from '../services/authService';
import '../styles/allUrls.css';
import { useNavigate } from 'react-router-dom';

const AllUrlsPage = () => {
  const [userUrls, setUserUrls] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');
  const navigate = useNavigate();

  const fetchUserUrls = async () => {
    try {
      const data = await getUserUrls();
      setUserUrls(data);
      setLoading(false);
    } catch (err) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ URL –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', err);
      setError('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
      setLoading(false);
    }
  };

  const formatDate = (isoDateString) => {
    const options = {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit',
    };
    return new Date(isoDateString).toLocaleDateString('uk-UA', options);
  };

  useEffect(() => {
    fetchUserUrls();
  }, []);

  if (loading) {
    return <div className="loading">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</div>;
  }

  if (error) {
    return <div className="error">{error}</div>;
  }

  return (
    <div className="all-urls-container">
        <nav className="navigate">
        <div className="logo">üîó URL Shortener</div>
        <button className="back-button" onClick={() => navigate(-1)}>
          –ù–∞–∑–∞–¥
        </button>
      </nav>
      <h1 className='h1-allurl'>–í—Å—ñ —Å–∫–æ—Ä–æ—á–µ–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è</h1>
      {userUrls.length > 0 ? (
        <ul className="urls-list">
          {userUrls.map((url, index) => (
            <li key={index} className="url-item">
              <p><strong>–°–∫–æ—Ä–æ—á–µ–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:</strong> <a href={`http://localhost:8000/${url.short}`} target="_blank" rel="noopener noreferrer">{url.short}</a></p>
              <p><strong>–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è:</strong> {formatDate(url.created_at)}</p>
            </li>
          ))}
        </ul>
      ) : (
        <p>–£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î —Å–∫–æ—Ä–æ—á–µ–Ω–∏—Ö –ø–æ—Å–∏–ª–∞–Ω—å.</p>
      )}
    </div>
  );
};

export default AllUrlsPage;
